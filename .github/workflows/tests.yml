name: GitHub Actions CI
on:
  pull_request: []
jobs:
  tests:
    strategy:
      matrix:
        version: [macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.version }}
    timeout-minutes: 4320
    env:
      HOMEBREW_GIT_NAME: BrewTestBot
      HOMEBREW_GIT_EMAIL: 'homebrew-test-bot@lists.sfconservancy.org'
      PATH: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin'
      HOMEBREW_DEVELOPER: 1
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Update Homebrew
        run: brew update-reset
      - name: Set up Git repository
        run: |
          HOMEBREW_TAP_DIR="$(brew --repo Homebrew/core)"
          rm -rf "$HOMEBREW_TAP_DIR"
          ln -s "$PWD" "$HOMEBREW_TAP_DIR"
      - name: Get test-bot arguments
        uses: actions/github-script@0.9.0
        id: args
        with:
          result-encoding: string
          script: |
            const labels = await github.issues.listLabelsOnIssue({
              ...context.repo,
              issue_number: context.issue.number
            })
            return labels.data.filter(l => l.name.startsWith("ci/")).map(l => "--" + l.name.slice(3)).join(" ")
      - name: Run brew test-bot
        run: |
          mkdir bottles
          cd bottles
          brew test-bot --tap=Homebrew/core ${{ steps.args.outputs.result }}
      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"
      - name: Upload bottles
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@v1
        with:
          name: bottles
          path: bottles
      - name: Cleanup
        if: always()
        run: |
          find .
          rm -rf *
